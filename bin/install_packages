#!/usr/bin/bash

if test "$(whoami)" = "root"
then
    echo "This program should not be run as root."
    exit 1
fi

function ask() {
    echo ""
    echo -n "$1 [Y/n] "
    read input
    test "$input" = "Y"
}

function installgit() {
    sudo apt install -y git
}

function installvim() {
    sudo apt install -y vim
}

function installvimrc() {
    rm -rf ~/.vim_runtime
    git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
    ~/.vim_runtime/install_awesome_vimrc.sh
}

function installtmux() {
    sudo apt install -y tmux
}

function installfish() {
    echo 'deb http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_11/ /' | sudo tee /etc/apt/sources.list.d/shells:fish:release:3.list
    curl -fsSL https://download.opensuse.org/repositories/shells:fish:release:3/Debian_11/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_fish_release_3.gpg > /dev/null
    sudo apt update
    sudo apt install -y fish
    chsh --shell $(which fish)
}

function installhomebrew() {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

function installsystempython() {
    sudo add-apt-repository ppa:deadsnakes/ppa
    sudo apt update
    sudo apt install python3-pip python3.10-venv
#    sudo apt install python3.11 python3.11-venv python3-pip python-tk python3-tk tk-dev
#    sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2
}

function installrubyinstall() {
    brew install ruby-install
}

function installchruby() {
    brew install chruby-fish
}

function installpyenv() {
    sudo apt update
    sudo apt install python-tk python3-tk tk-dev
    brew install pyenv
}

function installnvm() {
    mkdir -p $XDG_CONFIG_HOME/fish/plugins
    rm -rf $XDG_CONFIG_HOME/fish/plugins/nvm.fish
    git -C $XDG_CONFIG_HOME/fish/plugins clone git@github.com:jorgebucaran/nvm.fish.git
    fish -C "update_plugin nvm.fish"
    fish -C "emit nvm_install" # FIXME: This is supposed to install $nvm_data but doesn't
}

function generatessh() {
    ssh-keygen -t ed25519 -a 100 -C "$(whoami)@$(hostname)"
    ssh-keygen -y -f ~/.ssh/id_ed25519
}

function installgcloud() {
    sudo apt install -y apt-transport-https ca-certificates gnupg
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg
    sudo apt update
    sudo apt install -y \
        google-cloud-cli \
        google-cloud-sdk \
        google-cloud-sdk-pubsub-emulator \
        google-cloud-sdk-cloud-run-proxy \
        google-cloud-sdk-app-engine-python \
        google-cloud-sdk-app-engine-python-extras

    gcloud init
}

function installpostgresql() {
    sudo apt update
    sudo apt install -y postgresql postgresql-contrib libpq-dev
}

function installgh() {
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && sudo apt update \
    && sudo apt install gh -y
}

function installxclip() {
    sudo apt install xclip
}

function installngrok() {
    curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | \
        sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && \
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | \
        sudo tee /etc/apt/sources.list.d/ngrok.list && \
        sudo apt update && \
        sudo apt install ngrok

    read -sp "Enter your ngrok auth token: " authtoken
    ngrok config add-authtoken $authtoken
}

function installinsomnia() {
    curl -L -o /tmp/Insomnia-latest.deb "https://updates.insomnia.rest/downloads/ubuntu/latest?app=com.insomnia.app"
    sudo dpkg -i /tmp/Insomnia-latest.deb
}

function installpgadmin() {
    curl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg
    sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
    sudo apt install pgadmin4
}

function installnode() {
    curl -sL https://deb.nodesource.com/setup_18.x | sudo bash -
    sudo apt install -y nodejs
}

function installjq() {
    sudo apt install jq
}

function installyq() {
    brew install yq
}

function installterraform() {
    wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    sudo apt update && sudo apt install terraform
}

function installdconfeditor() {
    sudo apt install dconf-editor
}

#######################################################

sudo apt update

if test -n "$1"
then
    $1
    exit $?
fi

if ask "Install git?"; then installgit; fi
if ask "Install vim?"; then installvim; fi
if ask "Install github:amix/vimrc? (Warning: Destructive!)"; then installvimrc; fi
if ask "Install tmux?"; then installtmux; fi
if ask "Install Fish Shell?"; then installfish; fi
if ask "Install Homebrew?"; then installhomebrew; fi
# if ask "Update System Python?"; then installpython; fi
# if ask "Update system node?"; then installnode; fi
if ask "Install ruby-install?"; then installrubyinstall; fi
if ask "Install chruby?"; then installchruby; fi
if ask "Install nvm?"; then installnvm; fi
if ask "Install pyenv?"; then installpyenv; fi
if ask "Generate SSH Key?"; then generatessh; fi
if ask "Install gcloud CLI?"; then installgcloud; fi
if ask "Install postgresql?"; then installposgresql; fi
if ask "Install github CLI?"; then installgh; fi
if ask "Install xclip?"; then installxclip; fi
if ask "Install ngrok?"; then installngrok; fi
if ask "Install Insomnia?"; then installinsomnia; fi
if ask "Install pgadmin?"; then installpgadmin; fi
if ask "Install jq?"; then installjq; fi
if ask "Install yq?"; then installyq; fi
if ask "Install terraform?"; then installterraform; fi
if ask "Install dconf-editor?"; then installdconfeditor; fi

# TODO:
# - apt default-jre
# - apt maven
# - swift
# - imwheel
# - xbindkeys?
# - bluez?
